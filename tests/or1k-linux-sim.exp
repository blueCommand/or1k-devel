#!/bin/bash

set_board_info target_install {or1k-linux}
process_multilib_options ""
load_generic_config "unix"

# Set up remote target info. We select the IP address using an external
# program which knows about all available Linuxes.
set linux_hostname [exec /srv/or1k-devel/tests/get-ip.sh]
set_board_info hostname $linux_hostname
set_board_info username root

global GCC_UNDER_TEST
set GCC_UNDER_TEST "/srv/compilers/openrisc-devel/bin/gcc"
global GXX_UNDER_TEST
set GXX_UNDER_TEST "/srv/compilers/openrisc-devel/bin/g++"
set_board_info compiler /srv/compilers/openrisc-devel/bin/gcc
set_board_info c++compiler /srv/compilers/openrisc-devel/bin/g++
set target_alias "or1k-linux"

set_board_info rsh_prog ssh
set_board_info rcp_prog scp

# We need to define this flag to generate default .gcda files if we are using
# a stock compiler, without the profopt.exp changes. No problem with doubling
# up the argument in normal circumstances.
set_board_info cflags    "-fprofile-dir=."
set_board_info cxxflags  "-fprofile-dir=."
set_board_info ldscript ""
set_board_info slow_simulator 0

# Used by a few gcc.c-torture testcases to delimit how large the stack can be.
set_board_info gcc,stack_size 65536
